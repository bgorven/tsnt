//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.10.27.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace Tas.Tenant.CanApply
{
    #pragma warning disable // Disable all warnings

    /// <summary>details of a candidate's ability to apply for a given job</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CanApply 
    {
        /// <summary>true of the candidate is allowed to apply for this job, otherwise false</summary>
        [Newtonsoft.Json.JsonProperty("allowed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Allowed { get; set; }
    
        /// <summary>details of why the candidate is not allowed to apply - e.g. 'You've already applied'</summary>
        [Newtonsoft.Json.JsonProperty("notAllowedMessage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string NotAllowedMessage { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static CanApply FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CanApply>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
}