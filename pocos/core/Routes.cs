//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.10.27.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace Tas.Core.Routes
{
    #pragma warning disable // Disable all warnings

    /// <summary>a class of principal (typically a human) identifiable by SSO. In theory developer-defined but for now only TAS can create.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PrincipalType
    {
        [System.Runtime.Serialization.EnumMember(Value = "user")]
        User = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "candidate")]
        Candidate = 1,
    
    }
    
    /// <summary>A set of SAML values that uniquely identify this person, consistently across TAS apps, and with any number of potential IdPs</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class SamlSubject 
    {
        /// <summary>principal type</summary>
        [Newtonsoft.Json.JsonProperty("pt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrincipalType Pt { get; set; }
    
        /// <summary>key of the SAML assertion with the the TAS core SAML database</summary>
        [Newtonsoft.Json.JsonProperty("samlKey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string SamlKey { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nameID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string NameID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("entityID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string EntityID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static SamlSubject FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SamlSubject>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Routes 
    {
        [Newtonsoft.Json.JsonProperty("consumingAppInstall", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ConsumingAppInstall ConsumingAppInstall { get; set; }
    
        [Newtonsoft.Json.JsonProperty("consumedApi", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ConsumedApi ConsumedApi { get; set; }
    
        [Newtonsoft.Json.JsonProperty("producingAppInstalls", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<ConsumingAppInstall> ProducingAppInstalls { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static Routes FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Routes>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ConsumingAppInstall 
    {
        [Newtonsoft.Json.JsonProperty("tenant", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Tenant { get; set; }
    
        [Newtonsoft.Json.JsonProperty("app", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string App { get; set; }
    
        [Newtonsoft.Json.JsonProperty("methods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Method> Methods { get; set; }
    
        [Newtonsoft.Json.JsonProperty("securityGeneration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int SecurityGeneration { get; set; }
    
        [Newtonsoft.Json.JsonProperty("endPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EndPoint { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static ConsumingAppInstall FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConsumingAppInstall>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class ConsumedApi 
    {
        [Newtonsoft.Json.JsonProperty("apiDeveloper", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ApiDeveloper { get; set; }
    
        [Newtonsoft.Json.JsonProperty("apiUriTemplate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ApiUriTemplate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("consumedAsSourceOfTruth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ConsumedAsSourceOfTruth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("methods", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.ObjectModel.ObservableCollection<Method> Methods { get; set; } = new System.Collections.ObjectModel.ObservableCollection<Method>();
    
        /// <summary>the principal type of this API (not present if this is not an on-behalf API)</summary>
        [Newtonsoft.Json.JsonProperty("principalType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrincipalType? PrincipalType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static ConsumedApi FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConsumedApi>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Method
    {
        [System.Runtime.Serialization.EnumMember(Value = "HEAD")]
        HEAD = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "GET")]
        GET = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "DELETE")]
        DELETE = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "PATCH")]
        PATCH = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "POST")]
        POST = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = "PUT")]
        PUT = 5,
    
    }
}