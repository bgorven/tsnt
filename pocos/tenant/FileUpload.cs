//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.10.27.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace Tas.Tenant.FileUpload
{
    #pragma warning disable // Disable all warnings

    /// <summary>keep in synch with the trait document_asStream</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum MediaType
    {
        [System.Runtime.Serialization.EnumMember(Value = "application/pdf")]
        Application_pdf = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "application/vnd.openxmlformats-officedocument.wordprocessingml.document")]
        Application_vnd_openxmlformatsOfficedocument_wordprocessingml_document = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "application/msword")]
        Application_msword = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "application/rtf")]
        Application_rtf = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "text/plain")]
        Text_plain = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = "image/png")]
        Image_png = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = "text/html")]
        Text_html = 6,
    
    }
    
    /// <summary>details for a previously uploaded file</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FileDownload 
    {
        [Newtonsoft.Json.JsonProperty("fileName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string FileName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("via", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Via { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mediaType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public MediaType MediaType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("size", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Size { get; set; }
    
        /// <summary>hash of the file's binary content</summary>
        [Newtonsoft.Json.JsonProperty("md5", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Md5 { get; set; }
    
        /// <summary>the date and time the file was uploaded</summary>
        [Newtonsoft.Json.JsonProperty("dateUploaded", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? DateUploaded { get; set; }
    
        /// <summary>pre-signed link as per http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html to access the raw data. Includes file name as the trailing component so that browsers name the download correctly.</summary>
        [Newtonsoft.Json.JsonProperty("preSignedUri", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string PreSignedUri { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static FileDownload FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FileDownload>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
    
    /// <summary>Details for a file upload operation</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.27.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class FileUpload 
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Data { get; set; }
    
        [Newtonsoft.Json.JsonProperty("fileName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string FileName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("via", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Via { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
        
        public static FileUpload FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FileUpload>(data, new Newtonsoft.Json.JsonConverter[] { new Newtonsoft.Json.Converters.StringEnumConverter() });
        }
    }
}